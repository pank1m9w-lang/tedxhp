---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import BottomNav from '../components/BottomNav.astro';
import Footer from '../components/Footer.astro';
---

<BaseLayout title="TEDx Tsushima Youth 2025 - Roots for Well-being, Innovation">
  <Header />

  <main>
    <Hero />
  </main>

  <Footer />
  <BottomNav />
</BaseLayout>

<script>
  // Interactive Hero Section Features
  let clickCount = 0;
  let particleCount = 0;
  const maxParticles = 50;

  function createRipple(x: number, y: number) {
    const ripple = document.createElement('div');
    ripple.className = 'ripple';
    ripple.style.left = x - 50 + 'px';
    ripple.style.top = y - 50 + 'px';
    ripple.style.width = '100px';
    ripple.style.height = '100px';

    document.querySelector('.hero')?.appendChild(ripple);

    setTimeout(() => {
      ripple.remove();
    }, 600);
  }

  function createParticle() {
    if (particleCount >= maxParticles) return;

    const particle = document.createElement('div');
    const petalTypes = ['particle', 'particle petal-1', 'particle petal-2', 'particle petal-3'];
    const randomType = petalTypes[Math.floor(Math.random() * petalTypes.length)];

    particle.className = randomType;
    particle.style.left = Math.random() * 100 + '%';
    particle.style.animationDelay = Math.random() * 3 + 's';
    particle.style.animationDuration = (3 + Math.random() * 3) + 's';

    const size = 8 + Math.random() * 8;
    particle.style.width = size + 'px';
    particle.style.height = size + 'px';

    document.getElementById('heroParticles')?.appendChild(particle);
    particleCount++;

    setTimeout(() => {
      particle.remove();
      particleCount--;
    }, 6000);
  }

  function toggleBackgroundColor() {
    const hero = document.querySelector('.hero');
    const joinButton = document.getElementById('heroJoinButton');

    hero?.classList.add('red-background');
    if (joinButton) {
      joinButton.style.display = 'block';
      setTimeout(() => {
        joinButton.classList.add('show');
      }, 100);
    }
  }

  // Hero click interaction
  const hero = document.querySelector('.hero');
  if (hero) {
    hero.addEventListener('click', function(e) {
      if (!(e instanceof MouseEvent)) return;
      const rect = hero.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      createRipple(x, y);

      clickCount++;

      if (clickCount >= 3) {
        toggleBackgroundColor();
      }
    });
  }

  // Scroll interaction - create falling particles
  let lastScrollTop = 0;
  window.addEventListener('scroll', function() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    if (scrollTop > lastScrollTop && scrollTop < window.innerHeight) {
      if (Math.random() < 0.5) {
        createParticle();
      }
      if (Math.random() < 0.2) {
        createParticle();
        setTimeout(() => createParticle(), 100);
      }
    }

    lastScrollTop = scrollTop;
  });
</script>
